#!/usr/bin/env python3

"""
    find-closest-github-release
    ===========================

    Finds an application release closest to given number. Prefers an older version than newer for compatibility.

    **Example of usage:**
    ```bash
    ./bin/find-closest-github-release taigaio/taiga-front-dist 3.5.14-stable
    ```

    **Example output:**
    ```
    3.4.6-stable
    ```
"""

import sys
import requests
import time
import re


class FindClosestRelease:
    url: str

    def __init__(self, repo_name: str):
        self.url = 'https://api.github.com/repos/%s' % repo_name

    def get_available_tags(self, retries: int = 5) -> list:
        """ Lists all tags from github project """

        try:
            response = requests.get(self.url + '/tags').json()

            return list(map(
                lambda tag_object: str(tag_object['name']),
                response
            ))
        except TypeError:
            if retries <= 0:
                raise

            time.sleep(5)
            return self.get_available_tags(retries - 1)

    def main(self, version: str) -> str:
        all_versions = self.get_available_tags()

        if version in all_versions:
            return version

        all_versions += [version]
        sorted_desc = list(reversed(self.natural_sort(all_versions)))
        current_version_position = sorted_desc.index(version)

        if len(sorted_desc) == 1:
            return version

        if current_version_position == len(sorted_desc) - 1:
            return sorted_desc[len(sorted_desc) - 2]

        return sorted_desc[current_version_position + 1]

    @staticmethod
    def natural_sort(l):
        convert = lambda text: int(text) if text.isdigit() else text.lower()
        alphanum_key = lambda key: [convert(c) for c in re.split('([0-9]+)', key)]

        return sorted(l, key=alphanum_key)


if __name__ == '__main__':
    if len(sys.argv) < 3:
        print(' Usage: ' + sys.argv[0] + ' <github repository> <release to compare>')
        print(' Example: ' + sys.argv[0] + ' taigaio/taiga-front-dist 3.5.14-stable')
        print('')
        sys.exit(1)

    app = FindClosestRelease(repo_name=sys.argv[1])
    print(app.main(version=sys.argv[2]))
